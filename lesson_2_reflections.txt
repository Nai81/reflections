	When you initialize a repository, git creates a hidden file where it
will store the meta-data for all the commits you create in the future. You
need to do this so that git has somewhere to store your commits.

	The staging area in git is different from both the repository and the
working directory in that it provides a transitional state between the files
you are working on and the previous status of your project that is being
tracked in the repository. This allows you to control how you would like your
changes to be tracked (say for example you edited multiple files with seperate
logical changes, but forgot to commit in between.)

	You can use the staging area to insure you have 1 logical commit per
change by comparing the file in your staging area to your most recent commit,
and by comparing the file in your directory to your staging area to view all
changes you have made since you last staged or commited a file. 

	Creating branches helps keep your history organized by letting you
sort and organize changes you don't necesarily think will work seperately from
the version(s) you know will work i.e. searching for a faster way to run a
program, changing version languages, experimenting with a new feature, etc...

	Diagrams help you visualize branch structure by indicating where
branches are in relation to eachother and which commits they have in common
(where they "branch" off).
